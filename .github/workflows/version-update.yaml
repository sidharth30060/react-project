name: Version Update

on:
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for pushing changes
      pull-requests: write  # Needed for creating PRs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all branches are available
          token: ${{ secrets.PAT_TOKEN }}  # Use Personal Access Token (PAT)

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create a new branch
        run: |
          BRANCH_NAME="version-update-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Run version update script
        run: |
          #!/bin/bash
          set -e  # Exit on error
          
          # Define the versions in reverse order
          versions=("v1" "v2" "v3" "v4")
          
          # Loop through versions in reverse order
          for ((i=${#versions[@]}-2; i>=0; i--)); do
              src="src/${versions[i]}"
              dest="src/${versions[i+1]}"
          
              # Check if source directory exists
              if [ ! -d "$src" ]; then
                  echo "❌ Error: Source directory $src does not exist!"
                  exit 1
              fi
          
              # Ensure destination folder exists
              mkdir -p "$dest"
          
              # Copy all files from src to dest
              cp -r "$src/"* "$dest/" 2>/dev/null || echo "⚠️ Warning: No files copied from $src"
          
              echo "✅ Copied contents from $src to $dest"
          
              # Replace version strings inside files
              find "$dest" -type f -exec sed -i "s/This is ${versions[i]}/This is ${versions[i+1]}/g" {} +
          
              echo "✅ Updated version strings in $dest"
          
              # Show changed files
              git diff --stat "$dest"
          done
          
          echo "✅ Version update script completed!"

      - name: Check for changes
        run: |
          git status
          git diff
          if git diff --quiet; then
            echo "No changes detected, skipping PR creation."
            exit 0
          fi

      - name: Commit and push changes
        run: |
          git add .
          git status  # Debugging step
          git commit -m "Automated version update"
          git push origin $BRANCH_NAME

      - name: Force Create PR if Necessary
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}  # Use PAT for authentication
          branch: ${{ env.BRANCH_NAME }}
          base: main
          title: "Automated Version Update"
          body: "This PR updates the versioned files automatically."
          labels: "automation, version update"
          assignees: ${{ github.actor }}
          delete-branch: true  # Ensures branch is deleted after merge
